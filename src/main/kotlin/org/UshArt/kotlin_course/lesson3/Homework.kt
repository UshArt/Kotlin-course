package org.UshArt.kotlin_course.lesson3

//Погрузимся в атмосферу "Hackathon Survival": Марафон, где участники пытаются завершить реальный проект в условиях искусственно созданного хаоса (например, часто меняющиеся требования, неожиданные "сбои" в оборудовании)
//Для каждого из полей подбери наилучший способ хранения из известных тебе. Учитывай такие факторы, как изменяемость,
// обязательность, возможность начальной установки, ресурсоёмкие вычисления значения, необходимость проверки устанавливаемого значения на валидность или запрет доступа на установку при возможности чтения, публичность и приватность данных.

val event: String "Birthday" //Название мероприятия

var date: String "" //Дата проведения

var place: String "Cafe" //Место проведения

var eventbudget: Double = 55000.00 //Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы

var quantity: Int = 55 //Количество участников

var duration: Int = 60 //Длительность хакатона

val lazyValue: String by lazy {
    ""
} //Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг

val hackathon: String "" //Текущее состояние хакатона (статус)

var sponsors: String "" //Список спонсоров

var budget: Double = 0.0 //Бюджет мероприятия

var internetaccess: String "Medium" //Текущий уровень доступа к интернету

var transportation: String "" //Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки

var teams: Int = 5 //Количество команд

val task: String "" //Перечень задач

val lazyValue: String by lazy {
    ""
}//План эвакуации

var equipment: Int = 0
    get() = field
    set(value) {
        if (value >= 0) field = value
    } //Список доступного оборудования

var equipment: Int
    get() = field
    set(value) {
        if (value = 0) field = value
    }//Список свободного оборудования

lateinit var food: String //График питания участников (зависит от поставщика питания, определяемого за неделю до начала)

val lazyValue: String by lazy {
    ""
} //План мероприятий на случай сбоев

var experts: String "" //Список экспертов и жюри

var methods: String "" //Методы и процедуры для сбора отзывов от участников и гостей, включая анонимные опросы и интервью

val policy: String "" //Политика конфиденциальности

lateinit var userInfo: String //Приватные отзывы (фидбэк) участников и зрителей для анализа проблем

var temperature: Double = 25.0 //Текущая температура в помещении

var monitoring: String
    get() = field
    set(value) {
         if (value < 0) field = "bad"
         else if (value = 0) field = "normal"
         field = "High"
    } //Мониторинг и анализ производительности сетевого оборудования и интернет-соединения

var illumination: String "" //Уровень освещения

//Лог событий мероприятия

//Доступность медицинской помощи

//Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций

//Регистрационный номер мероприятия

//Максимально допустимый уровень шума в помещении хакатона

//Индикатор превышения уровня шума в помещениях

//Формат мероприятия (зависит от геополитической обстановки)

//Количество свободных мест для отдыха (например, кресел или диванов), сеттер валидирует, чтобы количество не было меньше нуля

//План взаимодействия с прессой

//Детальная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок

//Статус получения всех необходимых разрешений

//Указывает, открыт ли доступ к эксклюзивным ресурсам (например, специальному оборудованию)

//Список партнеров мероприятия

//Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия

//План распределения призов

val information: String "" //Контактная информация экстренных служб, медицинского персонала и других важных служб, недоступная участникам

//Особые условия для участников с ограниченными возможностями

//Общее настроение участников (определяется опросами)

val lazyValue: String by lazy {
    ""
} //Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия

lateinit val name: String "" //Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия

var people: Int
    get() = field
    set(value) {
        if (value >= 250) value = field
    } //Максимальное количество людей, которое может вместить место проведения

const val time = 2 //Стандартное количество часов, отведенное каждой команде для работы над проектом

var temperature: String "" //Текущая температура в помещении